/**
 * All the Mysql database policy is designed here.
 * **/
/*-------------------------------------------------------------------------------------------------------*/
const mysql     = require('mysql');
const SqlString = require('sqlstring');
const con       = mysql.createConnection({
      host    : 'localhost',
      user    : 'root',
      password: 'user',
      port    : 3305,
      debug   : false,
      database: 'xschool_managex'
});


/*-------------------------------------------------------------------------------------------------------*/
const studentTable = "CREATE TABLE `xschool_managex`.`xstudentsx`( " +
                        "`id` INT UNSIGNED NOT NULL AUTO_INCREMENT , " +
                        " `name` VARCHAR(250) NOT NULL ," +
                        "`surname` VARCHAR(250) NOT NULL ," +
                        " `dob` VARCHAR(20) NOT NULL ," +
                        " `gender` VARCHAR(7) NOT NULL ," +
                        "`address` TEXT NOT NULL ," +
                        "`reg_no` VARCHAR(250) NOT NULL ," +
                        "`reg_date` DATE NOT NULL ," +
                        "`reg_time` TIME NOT NULL ," +
                        "`contact_no` VARCHAR(110) NOT NULL ," +
                        "`email` VARCHAR(111) NOT NULL ," +
                        "`class_name`  JSON NOT NULL ," +
                        "`class_level`  JSON NOT NULL ," +
                        "`current_className` VARCHAR(99) NOT NULL ," +
                        "`current_classLevel` VARCHAR(9) NOT NULL ," +
                        "`school_years`  JSON NOT NULL ," +
                        "`parent_name` VARCHAR(250) NOT NULL ," +
                        "`parent_surname` VARCHAR(250) NOT NULL ," +
                        "`parent_id` VARCHAR(250) NOT NULL ," +
                        "`parent_address` TEXT NOT NULL ," +
                        "`parent_contact_no` VARCHAR(110) NOT NULL ," +
                        "`parent_email` VARCHAR(111) NOT NULL ," +
                        "PRIMARY KEY(`id`) ,UNIQUE (`reg_no`) " +
                        ");";

/*-------------------------------------------------------------------------------------------------------*/
const users = "CREATE TABLE `xschool_managex`.`xusersx`( " +
  "`id` INT UNSIGNED NOT NULL AUTO_INCREMENT , " +
  "`name` VARCHAR(250) NOT NULL , " +
  "`surname` VARCHAR(250) NOT NULL , " +
  "`password` TEXT NOT NULL , " +
  "`level_type` VARCHAR(3) NOT NULL , " +
  "`reg_date` DATE NOT NULL , " +
  "PRIMARY KEY(`id`)  " +
  " );";
let insert = "INSERT INTO xschool_managex.xstudentsx (" +
  " name, surname, dob, gender, address, reg_no, reg_date, reg_time, contact_no, email, class_name, class_level, current_className, current_classLevel, " +
  " school_years, parent_name, parent_surname, parent_id, parent_address, parent_contact_no, parent_email)  " +
  " VALUES(" +
  " 'kinsley', 'kajiva', '12-12-1993', 'male', '1989 mainways', 'cxw22sss', NOW(), CURTIME(), '7777', 'ssd@sdw.nm', '{}', '{}', " +
  " 'Blue', '1', '2012', 'parent1', 'parent2', '23sd3', '5453 345 fdfg', '99999', 'ser@we.hh' " +
  ");  " +
  "; ";
/*-------------------------------------------------------------------------------------------------------*/
module.exports.saveNewStudent = function (studentObject) { 
  return new Promise(function (resolve, reject) {
    let stdObj = JSON.parse(studentObject);
    con.connect(function (err) {
      if (err) {
        reject(err);
        throw err;
        }
        con.query("INSERT INTO xstudentsx SET ?", stdObj, (err, result, fields) => {
          if ( !err ) {
            resolve(result.affectedRows > 0 ? "done" :"failed");
          } else { 
            reject(err);
          }
        });
    });
  });
  
};

/*-------------------------------------------------------------------------------------------------------*/
module.exports.getAllStudents = function () {
  return new Promise(function (resolve, reject) { 
    con.connect( (err)=> {
      if (err) {
        reject(err);
        throw err;
     }
      con.query("SELECT * FROM xstudentsx ", (err, results, fields) => {
        if (!err) {
         
          let job = '';
          /* results.forEach(item => {
            let row  = item;
                job += " 'name': " + row.name + ",";
          }); */
          for (let index = 0; index < results.length; index++) {
            const row  = results[index];
                  job += '"name": "' + row.name +'"';
            
          }
                                 job += '';
                          //   let result  = JSON.parse(job);
            resolve(results);
        } else {
          reject(err);
        }
      });
    });
  });
};
/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------------------------------------*/